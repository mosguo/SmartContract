{
	"id": "725768f3a6f2978e1730f6bb0d662858",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.7.4",
	"solcLongVersion": "0.7.4+commit.3f05b770",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/9_mosguo_03.sol": {
				"content": "// SPDX-License-Identifier: GPL-3.0\r\npragma solidity 0.7.4;\r\n/**\r\n * @title Demo\r\n * @dev demo smart constract \r\n */\r\n contract Demo2 {\r\n    //uint256 result;\r\n\r\n    //function setNumber(uint256 newNumber) public {\r\n    //    result = newNumber;\r\n    //}\r\n\r\n    function getResult() public pure returns (string memory) {\r\n        uint256 result=8;\r\n        return integerToString(result);\r\n    }\r\n\r\n     function integerToString(uint256 i) internal pure returns(string memory) {\r\n        if (i==0) return \"0\";  \r\n        uint j=i;\r\n        uint len;\r\n        while(j!=0) {\r\n            len++;\r\n            j/=10;\r\n        }\r\n        bytes memory bstr = new bytes(len);\r\n        uint k = len-1;\r\n        while (i!=0) {\r\n            bstr[k--] = bytes1(uint8(48+(i%10)));\r\n        }\r\n        return string(bstr);\r\n\r\n\r\n     }\r\n }"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"contracts/9_mosguo_03.sol": {
				"Demo2": {
					"abi": [
						{
							"inputs": [],
							"name": "getResult",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "demo smart constract ",
						"kind": "dev",
						"methods": {},
						"title": "Demo",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/9_mosguo_03.sol\":119:825  contract Demo2 {\r... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/9_mosguo_03.sol\":119:825  contract Demo2 {\r... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0xde292789\n      eq\n      tag_3\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/9_mosguo_03.sol\":262:395  function getResult() public pure returns (string memory) {\r... */\n    tag_3:\n      tag_4\n      tag_5\n      jump\t// in\n    tag_4:\n      mload(0x40)\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      dup4\n      dup2\n      dup2\n      mload\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      dup1\n      dup4\n      dup4\n      0x00\n    tag_6:\n      dup4\n      dup2\n      lt\n      iszero\n      tag_8\n      jumpi\n      dup1\n      dup3\n      add\n      mload\n      dup2\n      dup5\n      add\n      mstore\n      0x20\n      dup2\n      add\n      swap1\n      pop\n      jump(tag_6)\n    tag_8:\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n      swap1\n      dup2\n      add\n      swap1\n      0x1f\n      and\n      dup1\n      iszero\n      tag_9\n      jumpi\n      dup1\n      dup3\n      sub\n      dup1\n      mload\n      0x01\n      dup4\n      0x20\n      sub\n      0x0100\n      exp\n      sub\n      not\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n    tag_9:\n      pop\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n    tag_5:\n        /* \"contracts/9_mosguo_03.sol\":304:317  string memory */\n      0x60\n        /* \"contracts/9_mosguo_03.sol\":330:344  uint256 result */\n      0x00\n        /* \"contracts/9_mosguo_03.sol\":345:346  8 */\n      0x08\n        /* \"contracts/9_mosguo_03.sol\":330:346  uint256 result=8 */\n      swap1\n      pop\n        /* \"contracts/9_mosguo_03.sol\":364:387  integerToString(result) */\n      tag_11\n        /* \"contracts/9_mosguo_03.sol\":380:386  result */\n      dup2\n        /* \"contracts/9_mosguo_03.sol\":364:379  integerToString */\n      tag_12\n        /* \"contracts/9_mosguo_03.sol\":364:387  integerToString(result) */\n      jump\t// in\n    tag_11:\n        /* \"contracts/9_mosguo_03.sol\":357:387  return integerToString(result) */\n      swap2\n      pop\n      pop\n        /* \"contracts/9_mosguo_03.sol\":262:395  function getResult() public pure returns (string memory) {\r... */\n      swap1\n      jump\t// out\n        /* \"contracts/9_mosguo_03.sol\":404:821  function integerToString(uint256 i) internal pure returns(string memory) {\r... */\n    tag_12:\n        /* \"contracts/9_mosguo_03.sol\":462:475  string memory */\n      0x60\n        /* \"contracts/9_mosguo_03.sol\":495:496  0 */\n      0x00\n        /* \"contracts/9_mosguo_03.sol\":492:493  i */\n      dup3\n        /* \"contracts/9_mosguo_03.sol\":492:496  i==0 */\n      eq\n        /* \"contracts/9_mosguo_03.sol\":488:508  if (i==0) return \"0\" */\n      iszero\n      tag_14\n      jumpi\n        /* \"contracts/9_mosguo_03.sol\":498:508  return \"0\" */\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x01\n      dup2\n      mstore\n      0x20\n      add\n      0x3000000000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      pop\n      swap1\n      pop\n      jump(tag_13)\n        /* \"contracts/9_mosguo_03.sol\":488:508  if (i==0) return \"0\" */\n    tag_14:\n        /* \"contracts/9_mosguo_03.sol\":521:527  uint j */\n      0x00\n        /* \"contracts/9_mosguo_03.sol\":528:529  i */\n      dup3\n        /* \"contracts/9_mosguo_03.sol\":521:529  uint j=i */\n      swap1\n      pop\n        /* \"contracts/9_mosguo_03.sol\":540:548  uint len */\n      0x00\n        /* \"contracts/9_mosguo_03.sol\":559:623  while(j!=0) {\r... */\n    tag_15:\n        /* \"contracts/9_mosguo_03.sol\":568:569  0 */\n      0x00\n        /* \"contracts/9_mosguo_03.sol\":565:566  j */\n      dup3\n        /* \"contracts/9_mosguo_03.sol\":565:569  j!=0 */\n      eq\n        /* \"contracts/9_mosguo_03.sol\":559:623  while(j!=0) {\r... */\n      tag_16\n      jumpi\n        /* \"contracts/9_mosguo_03.sol\":586:591  len++ */\n      dup1\n      dup1\n      0x01\n      add\n      swap2\n      pop\n      pop\n        /* \"contracts/9_mosguo_03.sol\":609:611  10 */\n      0x0a\n        /* \"contracts/9_mosguo_03.sol\":606:611  j/=10 */\n      dup3\n      dup2\n      tag_17\n      jumpi\n      invalid\n    tag_17:\n      div\n      swap2\n      pop\n        /* \"contracts/9_mosguo_03.sol\":559:623  while(j!=0) {\r... */\n      jump(tag_15)\n    tag_16:\n        /* \"contracts/9_mosguo_03.sol\":633:650  bytes memory bstr */\n      0x60\n        /* \"contracts/9_mosguo_03.sol\":663:666  len */\n      dup2\n        /* \"contracts/9_mosguo_03.sol\":653:667  new bytes(len) */\n      0xffffffffffffffff\n      dup2\n      gt\n      dup1\n      iszero\n      tag_18\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_18:\n      pop\n      mload(0x40)\n      swap1\n      dup1\n      dup3\n      mstore\n      dup1\n      0x1f\n      add\n      not(0x1f)\n      and\n      0x20\n      add\n      dup3\n      add\n      0x40\n      mstore\n      dup1\n      iszero\n      tag_19\n      jumpi\n      dup2\n      0x20\n      add\n      0x01\n      dup3\n      mul\n      dup1\n      calldatasize\n      dup4\n      calldatacopy\n      dup1\n      dup3\n      add\n      swap2\n      pop\n      pop\n      swap1\n      pop\n    tag_19:\n      pop\n        /* \"contracts/9_mosguo_03.sol\":633:667  bytes memory bstr = new bytes(len) */\n      swap1\n      pop\n        /* \"contracts/9_mosguo_03.sol\":678:684  uint k */\n      0x00\n        /* \"contracts/9_mosguo_03.sol\":691:692  1 */\n      0x01\n        /* \"contracts/9_mosguo_03.sol\":687:690  len */\n      dup4\n        /* \"contracts/9_mosguo_03.sol\":687:692  len-1 */\n      sub\n        /* \"contracts/9_mosguo_03.sol\":678:692  uint k = len-1 */\n      swap1\n      pop\n        /* \"contracts/9_mosguo_03.sol\":703:779  while (i!=0) {\r... */\n    tag_20:\n        /* \"contracts/9_mosguo_03.sol\":713:714  0 */\n      0x00\n        /* \"contracts/9_mosguo_03.sol\":710:711  i */\n      dup7\n        /* \"contracts/9_mosguo_03.sol\":710:714  i!=0 */\n      eq\n        /* \"contracts/9_mosguo_03.sol\":703:779  while (i!=0) {\r... */\n      tag_21\n      jumpi\n        /* \"contracts/9_mosguo_03.sol\":762:764  10 */\n      0x0a\n        /* \"contracts/9_mosguo_03.sol\":760:761  i */\n      dup7\n        /* \"contracts/9_mosguo_03.sol\":760:764  i%10 */\n      dup2\n      tag_22\n      jumpi\n      invalid\n    tag_22:\n      mod\n        /* \"contracts/9_mosguo_03.sol\":756:758  48 */\n      0x30\n        /* \"contracts/9_mosguo_03.sol\":756:765  48+(i%10) */\n      add\n        /* \"contracts/9_mosguo_03.sol\":743:767  bytes1(uint8(48+(i%10))) */\n      0xf8\n      shl\n        /* \"contracts/9_mosguo_03.sol\":731:735  bstr */\n      dup3\n        /* \"contracts/9_mosguo_03.sol\":736:739  k-- */\n      dup3\n      dup1\n      0x01\n      swap1\n      sub\n      swap4\n      pop\n        /* \"contracts/9_mosguo_03.sol\":731:740  bstr[k--] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_23\n      jumpi\n      invalid\n    tag_23:\n      0x20\n      add\n      add\n        /* \"contracts/9_mosguo_03.sol\":731:767  bstr[k--] = bytes1(uint8(48+(i%10))) */\n      swap1\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      swap1\n      dup2\n      0x00\n      byte\n      swap1\n      mstore8\n      pop\n        /* \"contracts/9_mosguo_03.sol\":703:779  while (i!=0) {\r... */\n      jump(tag_20)\n    tag_21:\n        /* \"contracts/9_mosguo_03.sol\":803:807  bstr */\n      dup2\n        /* \"contracts/9_mosguo_03.sol\":789:808  return string(bstr) */\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/9_mosguo_03.sol\":404:821  function integerToString(uint256 i) internal pure returns(string memory) {\r... */\n    tag_13:\n      swap2\n      swap1\n      pop\n      jump\t// out\n\n    auxdata: 0xa264697066735822122077881dc6a3149630bae8af42ac295b0137e9cd2861a76a49782226068803895464736f6c63430007040033\n}\n",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50610237806100206000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c8063de29278914610030575b600080fd5b6100386100b3565b6040518080602001828103825283818151815260200191508051906020019080838360005b8381101561007857808201518184015260208101905061005d565b50505050905090810190601f1680156100a55780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b60606000600890506100c4816100ca565b91505090565b60606000821415610112576040518060400160405280600181526020017f300000000000000000000000000000000000000000000000000000000000000081525090506101fc565b600082905060005b6000821461013c578080600101915050600a828161013457fe5b04915061011a565b60608167ffffffffffffffff8111801561015557600080fd5b506040519080825280601f01601f1916602001820160405280156101885781602001600182028036833780820191505090505b50905060006001830390505b600086146101f457600a86816101a657fe5b0660300160f81b828280600190039350815181106101c057fe5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350610194565b819450505050505b91905056fea264697066735822122077881dc6a3149630bae8af42ac295b0137e9cd2861a76a49782226068803895464736f6c63430007040033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x237 DUP1 PUSH2 0x20 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x2B JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xDE292789 EQ PUSH2 0x30 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x38 PUSH2 0xB3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x78 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x5D JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0xA5 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH1 0x8 SWAP1 POP PUSH2 0xC4 DUP2 PUSH2 0xCA JUMP JUMPDEST SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP3 EQ ISZERO PUSH2 0x112 JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x3000000000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP SWAP1 POP PUSH2 0x1FC JUMP JUMPDEST PUSH1 0x0 DUP3 SWAP1 POP PUSH1 0x0 JUMPDEST PUSH1 0x0 DUP3 EQ PUSH2 0x13C JUMPI DUP1 DUP1 PUSH1 0x1 ADD SWAP2 POP POP PUSH1 0xA DUP3 DUP2 PUSH2 0x134 JUMPI INVALID JUMPDEST DIV SWAP2 POP PUSH2 0x11A JUMP JUMPDEST PUSH1 0x60 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP1 ISZERO PUSH2 0x155 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x188 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x1 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 PUSH1 0x1 DUP4 SUB SWAP1 POP JUMPDEST PUSH1 0x0 DUP7 EQ PUSH2 0x1F4 JUMPI PUSH1 0xA DUP7 DUP2 PUSH2 0x1A6 JUMPI INVALID JUMPDEST MOD PUSH1 0x30 ADD PUSH1 0xF8 SHL DUP3 DUP3 DUP1 PUSH1 0x1 SWAP1 SUB SWAP4 POP DUP2 MLOAD DUP2 LT PUSH2 0x1C0 JUMPI INVALID JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH31 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH2 0x194 JUMP JUMPDEST DUP2 SWAP5 POP POP POP POP POP JUMPDEST SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH24 0x881DC6A3149630BAE8AF42AC295B0137E9CD2861A76A4978 0x22 0x26 MOD DUP9 SUB DUP10 SLOAD PUSH5 0x736F6C6343 STOP SMOD DIV STOP CALLER ",
							"sourceMap": "119:706:0:-:0;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b506004361061002b5760003560e01c8063de29278914610030575b600080fd5b6100386100b3565b6040518080602001828103825283818151815260200191508051906020019080838360005b8381101561007857808201518184015260208101905061005d565b50505050905090810190601f1680156100a55780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b60606000600890506100c4816100ca565b91505090565b60606000821415610112576040518060400160405280600181526020017f300000000000000000000000000000000000000000000000000000000000000081525090506101fc565b600082905060005b6000821461013c578080600101915050600a828161013457fe5b04915061011a565b60608167ffffffffffffffff8111801561015557600080fd5b506040519080825280601f01601f1916602001820160405280156101885781602001600182028036833780820191505090505b50905060006001830390505b600086146101f457600a86816101a657fe5b0660300160f81b828280600190039350815181106101c057fe5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350610194565b819450505050505b91905056fea264697066735822122077881dc6a3149630bae8af42ac295b0137e9cd2861a76a49782226068803895464736f6c63430007040033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x2B JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xDE292789 EQ PUSH2 0x30 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x38 PUSH2 0xB3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x78 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x5D JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0xA5 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH1 0x8 SWAP1 POP PUSH2 0xC4 DUP2 PUSH2 0xCA JUMP JUMPDEST SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP3 EQ ISZERO PUSH2 0x112 JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x3000000000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP SWAP1 POP PUSH2 0x1FC JUMP JUMPDEST PUSH1 0x0 DUP3 SWAP1 POP PUSH1 0x0 JUMPDEST PUSH1 0x0 DUP3 EQ PUSH2 0x13C JUMPI DUP1 DUP1 PUSH1 0x1 ADD SWAP2 POP POP PUSH1 0xA DUP3 DUP2 PUSH2 0x134 JUMPI INVALID JUMPDEST DIV SWAP2 POP PUSH2 0x11A JUMP JUMPDEST PUSH1 0x60 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP1 ISZERO PUSH2 0x155 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x188 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x1 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 PUSH1 0x1 DUP4 SUB SWAP1 POP JUMPDEST PUSH1 0x0 DUP7 EQ PUSH2 0x1F4 JUMPI PUSH1 0xA DUP7 DUP2 PUSH2 0x1A6 JUMPI INVALID JUMPDEST MOD PUSH1 0x30 ADD PUSH1 0xF8 SHL DUP3 DUP3 DUP1 PUSH1 0x1 SWAP1 SUB SWAP4 POP DUP2 MLOAD DUP2 LT PUSH2 0x1C0 JUMPI INVALID JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH31 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH2 0x194 JUMP JUMPDEST DUP2 SWAP5 POP POP POP POP POP JUMPDEST SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH24 0x881DC6A3149630BAE8AF42AC295B0137E9CD2861A76A4978 0x22 0x26 MOD DUP9 SUB DUP10 SLOAD PUSH5 0x736F6C6343 STOP SMOD DIV STOP CALLER ",
							"sourceMap": "119:706:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;262:133;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;304:13;330:14;345:1;330:16;;364:23;380:6;364:15;:23::i;:::-;357:30;;;262:133;:::o;404:417::-;462:13;495:1;492;:4;488:20;;;498:10;;;;;;;;;;;;;;;;;;;;;488:20;521:6;528:1;521:8;;540;559:64;568:1;565;:4;559:64;;586:5;;;;;;;609:2;606:5;;;;;;;;;559:64;;;633:17;663:3;653:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;633:34;;678:6;691:1;687:3;:5;678:14;;703:76;713:1;710;:4;703:76;;762:2;760:1;:4;;;;;;756:2;:9;743:24;;731:4;736:3;;;;;;;731:9;;;;;;;;;;;:36;;;;;;;;;;;703:76;;;803:4;789:19;;;;;;404:417;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "113400",
								"executionCost": "159",
								"totalCost": "113559"
							},
							"external": {
								"getResult()": "infinite"
							},
							"internal": {
								"integerToString(uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 119,
									"end": 825,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 119,
									"end": 825,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 119,
									"end": 825,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 119,
									"end": 825,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 119,
									"end": 825,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 119,
									"end": 825,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 119,
									"end": 825,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 119,
									"end": 825,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 119,
									"end": 825,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 119,
									"end": 825,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 119,
									"end": 825,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 119,
									"end": 825,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 119,
									"end": 825,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 119,
									"end": 825,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 119,
									"end": 825,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 119,
									"end": 825,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 119,
									"end": 825,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 119,
									"end": 825,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 119,
									"end": 825,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 119,
									"end": 825,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 119,
									"end": 825,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122077881dc6a3149630bae8af42ac295b0137e9cd2861a76a49782226068803895464736f6c63430007040033",
									".code": [
										{
											"begin": 119,
											"end": 825,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 119,
											"end": 825,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 119,
											"end": 825,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 119,
											"end": 825,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 119,
											"end": 825,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 119,
											"end": 825,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 119,
											"end": 825,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 119,
											"end": 825,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 119,
											"end": 825,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 119,
											"end": 825,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 119,
											"end": 825,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 119,
											"end": 825,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 119,
											"end": 825,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 119,
											"end": 825,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 119,
											"end": 825,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 119,
											"end": 825,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 119,
											"end": 825,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 119,
											"end": 825,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 119,
											"end": 825,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 119,
											"end": 825,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 119,
											"end": 825,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 119,
											"end": 825,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 119,
											"end": 825,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 119,
											"end": 825,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 119,
											"end": 825,
											"name": "PUSH",
											"source": 0,
											"value": "DE292789"
										},
										{
											"begin": 119,
											"end": 825,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 119,
											"end": 825,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 119,
											"end": 825,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 119,
											"end": 825,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 119,
											"end": 825,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 119,
											"end": 825,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 119,
											"end": 825,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 119,
											"end": 825,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 262,
											"end": 395,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 262,
											"end": 395,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 262,
											"end": 395,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 262,
											"end": 395,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 262,
											"end": 395,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 262,
											"end": 395,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 262,
											"end": 395,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 262,
											"end": 395,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 262,
											"end": 395,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 262,
											"end": 395,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 262,
											"end": 395,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 262,
											"end": 395,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 262,
											"end": 395,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 262,
											"end": 395,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 262,
											"end": 395,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 262,
											"end": 395,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 262,
											"end": 395,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 262,
											"end": 395,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 262,
											"end": 395,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 262,
											"end": 395,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 262,
											"end": 395,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 262,
											"end": 395,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 262,
											"end": 395,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 262,
											"end": 395,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 262,
											"end": 395,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 262,
											"end": 395,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 262,
											"end": 395,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 262,
											"end": 395,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 262,
											"end": 395,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 262,
											"end": 395,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 262,
											"end": 395,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 262,
											"end": 395,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 262,
											"end": 395,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 262,
											"end": 395,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 262,
											"end": 395,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 262,
											"end": 395,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 262,
											"end": 395,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 262,
											"end": 395,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 262,
											"end": 395,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 262,
											"end": 395,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 262,
											"end": 395,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 262,
											"end": 395,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 262,
											"end": 395,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 262,
											"end": 395,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 262,
											"end": 395,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 262,
											"end": 395,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 262,
											"end": 395,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 262,
											"end": 395,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 262,
											"end": 395,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 262,
											"end": 395,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 262,
											"end": 395,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 262,
											"end": 395,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 262,
											"end": 395,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 262,
											"end": 395,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 262,
											"end": 395,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 262,
											"end": 395,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 262,
											"end": 395,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 262,
											"end": 395,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 262,
											"end": 395,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 262,
											"end": 395,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 262,
											"end": 395,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 262,
											"end": 395,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 262,
											"end": 395,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 262,
											"end": 395,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 262,
											"end": 395,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 262,
											"end": 395,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 262,
											"end": 395,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 262,
											"end": 395,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 262,
											"end": 395,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 262,
											"end": 395,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 262,
											"end": 395,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 262,
											"end": 395,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 262,
											"end": 395,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 262,
											"end": 395,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 262,
											"end": 395,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 262,
											"end": 395,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 262,
											"end": 395,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 262,
											"end": 395,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 262,
											"end": 395,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 262,
											"end": 395,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 262,
											"end": 395,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 262,
											"end": 395,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 262,
											"end": 395,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 262,
											"end": 395,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 262,
											"end": 395,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 262,
											"end": 395,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 262,
											"end": 395,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 262,
											"end": 395,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 262,
											"end": 395,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 262,
											"end": 395,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 262,
											"end": 395,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 262,
											"end": 395,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 262,
											"end": 395,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 262,
											"end": 395,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 262,
											"end": 395,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 262,
											"end": 395,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 262,
											"end": 395,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 262,
											"end": 395,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 262,
											"end": 395,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 262,
											"end": 395,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 262,
											"end": 395,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 262,
											"end": 395,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 262,
											"end": 395,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 262,
											"end": 395,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 262,
											"end": 395,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 262,
											"end": 395,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 262,
											"end": 395,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 262,
											"end": 395,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 262,
											"end": 395,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 262,
											"end": 395,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 262,
											"end": 395,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 262,
											"end": 395,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 262,
											"end": 395,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 262,
											"end": 395,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 262,
											"end": 395,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 304,
											"end": 317,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 330,
											"end": 344,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 345,
											"end": 346,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 330,
											"end": 346,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 330,
											"end": 346,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 364,
											"end": 387,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 380,
											"end": 386,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 364,
											"end": 379,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 364,
											"end": 387,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 364,
											"end": 387,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 364,
											"end": 387,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 357,
											"end": 387,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 357,
											"end": 387,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 357,
											"end": 387,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 262,
											"end": 395,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 262,
											"end": 395,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 404,
											"end": 821,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 404,
											"end": 821,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 462,
											"end": 475,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 495,
											"end": 496,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 492,
											"end": 493,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 492,
											"end": 496,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 488,
											"end": 508,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 488,
											"end": 508,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 488,
											"end": 508,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 498,
											"end": 508,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 498,
											"end": 508,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 498,
											"end": 508,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 498,
											"end": 508,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 498,
											"end": 508,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 498,
											"end": 508,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 498,
											"end": 508,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 498,
											"end": 508,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 498,
											"end": 508,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 498,
											"end": 508,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 498,
											"end": 508,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 498,
											"end": 508,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 498,
											"end": 508,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 498,
											"end": 508,
											"name": "PUSH",
											"source": 0,
											"value": "3000000000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 498,
											"end": 508,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 498,
											"end": 508,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 498,
											"end": 508,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 498,
											"end": 508,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 498,
											"end": 508,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 498,
											"end": 508,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 498,
											"end": 508,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 488,
											"end": 508,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 488,
											"end": 508,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 521,
											"end": 527,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 528,
											"end": 529,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 521,
											"end": 529,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 521,
											"end": 529,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 540,
											"end": 548,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 559,
											"end": 623,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 559,
											"end": 623,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 568,
											"end": 569,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 565,
											"end": 566,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 565,
											"end": 569,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 559,
											"end": 623,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 559,
											"end": 623,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 586,
											"end": 591,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 586,
											"end": 591,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 586,
											"end": 591,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 586,
											"end": 591,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 586,
											"end": 591,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 586,
											"end": 591,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 586,
											"end": 591,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 609,
											"end": 611,
											"name": "PUSH",
											"source": 0,
											"value": "A"
										},
										{
											"begin": 606,
											"end": 611,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 606,
											"end": 611,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 606,
											"end": 611,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 606,
											"end": 611,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 606,
											"end": 611,
											"name": "INVALID",
											"source": 0
										},
										{
											"begin": 606,
											"end": 611,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 606,
											"end": 611,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 606,
											"end": 611,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 606,
											"end": 611,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 606,
											"end": 611,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 559,
											"end": 623,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 559,
											"end": 623,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 559,
											"end": 623,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 559,
											"end": 623,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 633,
											"end": 650,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 663,
											"end": 666,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 653,
											"end": 667,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 653,
											"end": 667,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 653,
											"end": 667,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 653,
											"end": 667,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 653,
											"end": 667,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 653,
											"end": 667,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 653,
											"end": 667,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 653,
											"end": 667,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 653,
											"end": 667,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 653,
											"end": 667,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 653,
											"end": 667,
											"name": "tag",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 653,
											"end": 667,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 653,
											"end": 667,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 653,
											"end": 667,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 653,
											"end": 667,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 653,
											"end": 667,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 653,
											"end": 667,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 653,
											"end": 667,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 653,
											"end": 667,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 653,
											"end": 667,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 653,
											"end": 667,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 653,
											"end": 667,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 653,
											"end": 667,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 653,
											"end": 667,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 653,
											"end": 667,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 653,
											"end": 667,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 653,
											"end": 667,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 653,
											"end": 667,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 653,
											"end": 667,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 653,
											"end": 667,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 653,
											"end": 667,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 653,
											"end": 667,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 653,
											"end": 667,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 653,
											"end": 667,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 653,
											"end": 667,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 653,
											"end": 667,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 653,
											"end": 667,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 653,
											"end": 667,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 653,
											"end": 667,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 653,
											"end": 667,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 653,
											"end": 667,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 653,
											"end": 667,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 653,
											"end": 667,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 653,
											"end": 667,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 653,
											"end": 667,
											"name": "CALLDATACOPY",
											"source": 0
										},
										{
											"begin": 653,
											"end": 667,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 653,
											"end": 667,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 653,
											"end": 667,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 653,
											"end": 667,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 653,
											"end": 667,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 653,
											"end": 667,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 653,
											"end": 667,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 653,
											"end": 667,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 653,
											"end": 667,
											"name": "tag",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 653,
											"end": 667,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 653,
											"end": 667,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 633,
											"end": 667,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 633,
											"end": 667,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 678,
											"end": 684,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 691,
											"end": 692,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 687,
											"end": 690,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 687,
											"end": 692,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 678,
											"end": 692,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 678,
											"end": 692,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 703,
											"end": 779,
											"name": "tag",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 703,
											"end": 779,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 713,
											"end": 714,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 710,
											"end": 711,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 710,
											"end": 714,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 703,
											"end": 779,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 703,
											"end": 779,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 762,
											"end": 764,
											"name": "PUSH",
											"source": 0,
											"value": "A"
										},
										{
											"begin": 760,
											"end": 761,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 760,
											"end": 764,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 760,
											"end": 764,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 760,
											"end": 764,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 760,
											"end": 764,
											"name": "INVALID",
											"source": 0
										},
										{
											"begin": 760,
											"end": 764,
											"name": "tag",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 760,
											"end": 764,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 760,
											"end": 764,
											"name": "MOD",
											"source": 0
										},
										{
											"begin": 756,
											"end": 758,
											"name": "PUSH",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 756,
											"end": 765,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 743,
											"end": 767,
											"name": "PUSH",
											"source": 0,
											"value": "F8"
										},
										{
											"begin": 743,
											"end": 767,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 731,
											"end": 735,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 736,
											"end": 739,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 736,
											"end": 739,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 736,
											"end": 739,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 736,
											"end": 739,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 736,
											"end": 739,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 736,
											"end": 739,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 736,
											"end": 739,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 731,
											"end": 740,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 731,
											"end": 740,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 731,
											"end": 740,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 731,
											"end": 740,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 731,
											"end": 740,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 731,
											"end": 740,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 731,
											"end": 740,
											"name": "INVALID",
											"source": 0
										},
										{
											"begin": 731,
											"end": 740,
											"name": "tag",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 731,
											"end": 740,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 731,
											"end": 740,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 731,
											"end": 740,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 731,
											"end": 740,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 731,
											"end": 767,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 731,
											"end": 767,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 731,
											"end": 767,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 731,
											"end": 767,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 731,
											"end": 767,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 731,
											"end": 767,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 731,
											"end": 767,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 731,
											"end": 767,
											"name": "BYTE",
											"source": 0
										},
										{
											"begin": 731,
											"end": 767,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 731,
											"end": 767,
											"name": "MSTORE8",
											"source": 0
										},
										{
											"begin": 731,
											"end": 767,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 703,
											"end": 779,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 703,
											"end": 779,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 703,
											"end": 779,
											"name": "tag",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 703,
											"end": 779,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 803,
											"end": 807,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 789,
											"end": 808,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 789,
											"end": 808,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 789,
											"end": 808,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 789,
											"end": 808,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 789,
											"end": 808,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 789,
											"end": 808,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 404,
											"end": 821,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 404,
											"end": 821,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 404,
											"end": 821,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 404,
											"end": 821,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 404,
											"end": 821,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 404,
											"end": 821,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"getResult()": "de292789"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.7.4+commit.3f05b770\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"getResult\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"demo smart constract \",\"kind\":\"dev\",\"methods\":{},\"title\":\"Demo\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/9_mosguo_03.sol\":\"Demo2\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/9_mosguo_03.sol\":{\"keccak256\":\"0x9759257204da9c77e809c80a0509cf2f9a8e98a2ad02cf9a8d2f12e111406640\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://7be13897b6e52755759a0af6c27e6c1ac692eb81021eafe02594e53fbcb0b1dd\",\"dweb:/ipfs/QmRW2JRdwvHoZ2Ex7uop9E1HHEiNVhiXnG8LN2U31UPWre\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"contracts/9_mosguo_03.sol": {
				"ast": {
					"absolutePath": "contracts/9_mosguo_03.sol",
					"exportedSymbols": {
						"Demo2": [
							91
						]
					},
					"id": 92,
					"license": "GPL-3.0",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"0.7",
								".4"
							],
							"nodeType": "PragmaDirective",
							"src": "37:22:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 2,
								"nodeType": "StructuredDocumentation",
								"src": "61:55:0",
								"text": " @title Demo\n @dev demo smart constract "
							},
							"fullyImplemented": true,
							"id": 91,
							"linearizedBaseContracts": [
								91
							],
							"name": "Demo2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 15,
										"nodeType": "Block",
										"src": "319:76:0",
										"statements": [
											{
												"assignments": [
													8
												],
												"declarations": [
													{
														"constant": false,
														"id": 8,
														"mutability": "mutable",
														"name": "result",
														"nodeType": "VariableDeclaration",
														"scope": 15,
														"src": "330:14:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 7,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "330:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 10,
												"initialValue": {
													"hexValue": "38",
													"id": 9,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "345:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_8_by_1",
														"typeString": "int_const 8"
													},
													"value": "8"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "330:16:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 12,
															"name": "result",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 8,
															"src": "380:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 11,
														"name": "integerToString",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 90,
														"src": "364:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$",
															"typeString": "function (uint256) pure returns (string memory)"
														}
													},
													"id": 13,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "364:23:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 6,
												"id": 14,
												"nodeType": "Return",
												"src": "357:30:0"
											}
										]
									},
									"functionSelector": "de292789",
									"id": 16,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getResult",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "280:2:0"
									},
									"returnParameters": {
										"id": 6,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 16,
												"src": "304:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 4,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "304:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "303:15:0"
									},
									"scope": 91,
									"src": "262:133:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 89,
										"nodeType": "Block",
										"src": "477:344:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 25,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 23,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 18,
														"src": "492:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 24,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "495:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "492:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 28,
												"nodeType": "IfStatement",
												"src": "488:20:0",
												"trueBody": {
													"expression": {
														"hexValue": "30",
														"id": 26,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "505:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_044852b2a670ade5407e78fb2863c51de9fcb96542a07186fe3aeda6bb8a116d",
															"typeString": "literal_string \"0\""
														},
														"value": "0"
													},
													"functionReturnParameters": 22,
													"id": 27,
													"nodeType": "Return",
													"src": "498:10:0"
												}
											},
											{
												"assignments": [
													30
												],
												"declarations": [
													{
														"constant": false,
														"id": 30,
														"mutability": "mutable",
														"name": "j",
														"nodeType": "VariableDeclaration",
														"scope": 89,
														"src": "521:6:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 29,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "521:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 32,
												"initialValue": {
													"id": 31,
													"name": "i",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 18,
													"src": "528:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "521:8:0"
											},
											{
												"assignments": [
													34
												],
												"declarations": [
													{
														"constant": false,
														"id": 34,
														"mutability": "mutable",
														"name": "len",
														"nodeType": "VariableDeclaration",
														"scope": 89,
														"src": "540:8:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 33,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "540:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 35,
												"nodeType": "VariableDeclarationStatement",
												"src": "540:8:0"
											},
											{
												"body": {
													"id": 46,
													"nodeType": "Block",
													"src": "571:52:0",
													"statements": [
														{
															"expression": {
																"id": 40,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "++",
																"prefix": false,
																"src": "586:5:0",
																"subExpression": {
																	"id": 39,
																	"name": "len",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 34,
																	"src": "586:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 41,
															"nodeType": "ExpressionStatement",
															"src": "586:5:0"
														},
														{
															"expression": {
																"id": 44,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 42,
																	"name": "j",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 30,
																	"src": "606:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "/=",
																"rightHandSide": {
																	"hexValue": "3130",
																	"id": 43,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "609:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"src": "606:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 45,
															"nodeType": "ExpressionStatement",
															"src": "606:5:0"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 38,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 36,
														"name": "j",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 30,
														"src": "565:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 37,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "568:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "565:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 47,
												"nodeType": "WhileStatement",
												"src": "559:64:0"
											},
											{
												"assignments": [
													49
												],
												"declarations": [
													{
														"constant": false,
														"id": 49,
														"mutability": "mutable",
														"name": "bstr",
														"nodeType": "VariableDeclaration",
														"scope": 89,
														"src": "633:17:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 48,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "633:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 54,
												"initialValue": {
													"arguments": [
														{
															"id": 52,
															"name": "len",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 34,
															"src": "663:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 51,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "653:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (uint256) pure returns (bytes memory)"
														},
														"typeName": {
															"id": 50,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "657:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														}
													},
													"id": 53,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "653:14:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "633:34:0"
											},
											{
												"assignments": [
													56
												],
												"declarations": [
													{
														"constant": false,
														"id": 56,
														"mutability": "mutable",
														"name": "k",
														"nodeType": "VariableDeclaration",
														"scope": 89,
														"src": "678:6:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 55,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "678:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 60,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 59,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 57,
														"name": "len",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 34,
														"src": "687:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"hexValue": "31",
														"id": 58,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "691:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "687:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "678:14:0"
											},
											{
												"body": {
													"id": 82,
													"nodeType": "Block",
													"src": "716:63:0",
													"statements": [
														{
															"expression": {
																"id": 80,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 64,
																		"name": "bstr",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 49,
																		"src": "731:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 67,
																	"indexExpression": {
																		"id": 66,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "UnaryOperation",
																		"operator": "--",
																		"prefix": false,
																		"src": "736:3:0",
																		"subExpression": {
																			"id": 65,
																			"name": "k",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 56,
																			"src": "736:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "731:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes1",
																		"typeString": "bytes1"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 77,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "3438",
																						"id": 72,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "756:2:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_48_by_1",
																							"typeString": "int_const 48"
																						},
																						"value": "48"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "+",
																					"rightExpression": {
																						"components": [
																							{
																								"commonType": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								},
																								"id": 75,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"leftExpression": {
																									"id": 73,
																									"name": "i",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 18,
																									"src": "760:1:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"nodeType": "BinaryOperation",
																								"operator": "%",
																								"rightExpression": {
																									"hexValue": "3130",
																									"id": 74,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": true,
																									"kind": "number",
																									"lValueRequested": false,
																									"nodeType": "Literal",
																									"src": "762:2:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_rational_10_by_1",
																										"typeString": "int_const 10"
																									},
																									"value": "10"
																								},
																								"src": "760:4:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							}
																						],
																						"id": 76,
																						"isConstant": false,
																						"isInlineArray": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"nodeType": "TupleExpression",
																						"src": "759:6:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "756:9:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 71,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "750:5:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_uint8_$",
																					"typeString": "type(uint8)"
																				},
																				"typeName": {
																					"id": 70,
																					"name": "uint8",
																					"nodeType": "ElementaryTypeName",
																					"src": "750:5:0",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 78,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "750:16:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint8",
																				"typeString": "uint8"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint8",
																				"typeString": "uint8"
																			}
																		],
																		"id": 69,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "743:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_bytes1_$",
																			"typeString": "type(bytes1)"
																		},
																		"typeName": {
																			"id": 68,
																			"name": "bytes1",
																			"nodeType": "ElementaryTypeName",
																			"src": "743:6:0",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 79,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "743:24:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes1",
																		"typeString": "bytes1"
																	}
																},
																"src": "731:36:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes1",
																	"typeString": "bytes1"
																}
															},
															"id": 81,
															"nodeType": "ExpressionStatement",
															"src": "731:36:0"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 63,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 61,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 18,
														"src": "710:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 62,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "713:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "710:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 83,
												"nodeType": "WhileStatement",
												"src": "703:76:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 86,
															"name": "bstr",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 49,
															"src": "803:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 85,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "796:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_string_storage_ptr_$",
															"typeString": "type(string storage pointer)"
														},
														"typeName": {
															"id": 84,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "796:6:0",
															"typeDescriptions": {}
														}
													},
													"id": 87,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "796:12:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 22,
												"id": 88,
												"nodeType": "Return",
												"src": "789:19:0"
											}
										]
									},
									"id": 90,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "integerToString",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 19,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 18,
												"mutability": "mutable",
												"name": "i",
												"nodeType": "VariableDeclaration",
												"scope": 90,
												"src": "429:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 17,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "429:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "428:11:0"
									},
									"returnParameters": {
										"id": 22,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 21,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 90,
												"src": "462:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 20,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "462:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "461:15:0"
									},
									"scope": 91,
									"src": "404:417:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 92,
							"src": "119:706:0"
						}
					],
					"src": "37:788:0"
				},
				"id": 0
			}
		}
	}
}